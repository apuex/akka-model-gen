.template 1
.pkgdir = "dbschema/src/main/dbschema/$(string.replace(model.package, ".|/"))"
.directory.create(pkgdir)
.output "$(pkgdir)/db-schema.sql"
/*****************************************************
 ** This file is 100% ***GENERATED***, DO NOT EDIT! **
 *****************************************************/

DROP USER IF EXISTS '$(model.dbSchema:c)'@'localhost';
DROP DATABASE IF EXISTS $(model.dbSchema:c);

CREATE DATABASE $(model.dbSchema:c) DEFAULT CHARACTER SET 'UTF8' DEFAULT COLLATE utf8_unicode_ci;

CREATE USER '$(model.dbSchema:c)'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO '$(model.dbSchema:c)'@'localhost' WITH GRANT OPTION;

USE $(model.dbSchema:c);

.for entity
.if !(defined(transient) & transient = "true")
CREATE TABLE $(model.dbSchema:c).$(entity.name:c) (
.isFirstField = 1
.result = "$(db_output_fk_pk(entity))"
.if string.length(result) > 0
.  isFirstField = 0
.endif
.for field
.if defined(field.transient) & field.transient = "true"
.else
.  out = db_output_field(entity, field)
.  if string.length(out) > 0
.    if !isFirstField
.      out = ",\n  " + out
.    endif
.    isFirstField = 0
.  result = result + out
.  endif
.endif
.endfor
  $(result:no)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

.endif
.endfor

.for entity
.if !(defined(transient) & transient = "true")
.for primaryKey
.  out = "ALTER TABLE $(model.dbSchema:c).$(entity.name) ADD CONSTRAINT $(primaryKey.name) PRIMARY KEY("
.  isFirstField = 1
.  for field
.    if !isFirstField
.      out = out + ", "
.    endif
.    out = out + field.name
.    isFirstField = 0
.  endfor
.  out = out + ");"
$(out:no)
.endfor
.endif
.endfor

.for entity
.if !(defined(transient) & transient = "true")
.for foreignKey
.  out = "ALTER TABLE $(model.dbSchema:c).$(entity.name) ADD CONSTRAINT $(foreignKey.name) FOREIGN KEY("
.  refCols = ""
.  isFirstField = 1
.  for field
.    if !isFirstField
.      out = out + ", "
.      refCols = refCols + ", "
.    endif
.    out = out + field.name
.    refCols = refCols + field.refField
.    isFirstField = 0
.  endfor
.  out = out + ") REFERENCES $(model.dbSchema:c).$(foreignKey.refEntity)(" + refCols + ");"
$(out:no)
.endfor
.endif
.endfor

.endtemplate
