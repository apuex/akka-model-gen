.function pb_format_type(t)
  if my.t = "tinyint" | my.t = "int" | my.t = "bigint" | my.t = "double" | my.t = "string"
    return "$(my.t:no)"
  else
    return "$(my.t:Pascal)"
  endif
.endfunction

.function pb_output_field(field, fieldNo)
  if my.field.type = "array"
    return "repeated $(pb_format_type(my.field.valueType)) $(my.field.name:Camel) = $(my.fieldNo);"
  elsif my.field.type = "map"
    return "$(my.field.type)<$(my.field.keyType), $(my.field.valueType)> $(my.field.name:Camel) = $(my.fieldNo);"
  else
    if defined(my.field.optional) & my.field.optional = "false"
      return "required $(my.field.type) $(my.field.name:Camel) = $(my.fieldNo);"
    else
      return "optional $(my.field.type) $(my.field.name:Camel) = $(my.fieldNo);"
    endif
  endif
.endfunction

.function extract_pk(entity)
  for my.entity.primaryKey
    return primaryKey
  endfor
.endfunction

.function pb_output_pk(entity, fieldNo)
  result = ""
  pk = extract_pk(entity)
  if defined(pk)
    for pk.field
      pkField = field
      echo field.name
      theField = entity->field(name = pkField.name)
      if !first()
        result = result + "\n"
      endif
      result = result + "$(pb_output_field(theField, fieldNo))"
      fieldNo = fieldNo + 1
    endfor
  else
    abort "E: no primaryKey is defined on entity $(entity.name)."
  endif
  return result
.endfunction

.function pb_output_fk(entity, fieldNo)
  result = ""
  fk = entity->foreignKey(refEntityName = entity.aggregationTo)
  theEntity = entity
  ref = entities->entity(name = theEntity.aggregationTo)
  if defined(fk) & defined(ref)
    for fk.field
      fkField = field
      f = ref->field(name = fkField.name)
      field.type = f.type
      if defined(f.length)
        field.length = f.length
      endif
      if !first()
        result = result + "\n"
      endif
      result = result + "$(pb_output_field(field, fieldNo))"
      fieldNo = fieldNo + 1
    endfor
  else
    abort "E: no foreignKey or aggregationTo is defined on entity $(entity.name)."
  endif
  return result
.endfunction

