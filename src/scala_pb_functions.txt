.function pb_format_type(t)
  if my.t = "tinyint" | my.t = "bool"
    return "bool"
  elsif my.t = "int"
    return "int32"
  elsif my.t = "bigint"
    return "int64"
  elsif my.t = "double" | my.t = "string"
    return "$(my.t:no)"
  elsif my.t = "timestamp"
    return "google.protobuf.Timestamp"
  elsif my.t = "any"
    return "google.protobuf.Any"
  elsif my.t = "actor_ref"
    return "$(my.t:Pascal)"
  else
    ref = find_entity_by_type(my.t)
    if defined(ref.enum) & ref.enum = "true"
      return "$(my.t:Pascal)"
    else
      return "$(my.t:Pascal)Vo"
    endif
  endif
.endfunction

.function pb_output_field(field, fieldNo)
  if defined(my.field.joinKey)
    foreignKey =  entity->foreignKey(name = my.field.joinKey)
    theRefField = model->entity(name = foreignKey.refEntity)->field(name = my.field.refField)
    assign_field_type(my.field, theRefField)
  endif
  if my.field.type = "array"
    if defined(my.field.entity)
      valueField = model->entity(name = my.field.entity)->field(name = my.field.valueField)
      return "repeated $(pb_format_type(valueField.valueType)) $(valueField.name:Camel) = $(my.fieldNo);"
    elsif my.field.valueType = "char"
      if defined(my.field.required) & my.field.required = "true"
        return "required bytes $(my.field.name:Camel) = $(my.fieldNo);"
      else
        return "optional bytes $(my.field.name:Camel) = $(my.fieldNo);"
      endif
    else
      return "repeated $(pb_format_type(my.field.valueType)) $(my.field.name:Camel) = $(my.fieldNo);"
    endif
  elsif my.field.type = "map"
    if defined(my.field.entity)
      kField = model->entity(name = my.field.entity)->field(name = my.field.keyField)
      vField = model->entity(name = my.field.entity)->field(name = my.field.valueField)
      return "$(my.field.type)<$(pb_format_type(kField.type)), $(pb_format_type(vField.type))> $(my.field.name:Camel) = $(my.fieldNo);"
    else
      return "$(my.field.type)<$(pb_format_type(my.field.keyType)), $(pb_format_type(my.field.valueType))> $(my.field.name:Camel) = $(my.fieldNo);"
    endif
  else
    if defined(my.field.required) & my.field.required = "true"
      return "required $(pb_format_type(my.field.type)) $(my.field.name:Camel) = $(my.fieldNo);"
    else
      return "optional $(pb_format_type(my.field.type)) $(my.field.name:Camel) = $(my.fieldNo);"
    endif
  endif
.endfunction

.function pb_output_pk(entity, fieldNo)
  result = ""
  if !defined(extract_pk(my.entity))
    return result
  endif
  pk = extract_pk(my.entity)
  if defined(pk)
    for pk.field
      pkField = field
      if defined(my.entity->field(name = pkField.name))
        theField = my.entity->field(name = pkField.name)
      else
        theField = extract_fk_field(my.entity, field.name)
      endif
      field.type = theField.type
      if defined(theField.length)
        field.length = theField.length
      endif
      if defined(theField.required)
        field.required = theField.required
      endif
      if !first()
        result = result + "\n  "
      endif
      result = result + "$(pb_output_field(field, fieldNo))"
      fieldNo = fieldNo + 1
    endfor
  else
    abort "E: no primaryKey is defined on entity $(my.entity.name)."
  endif
  return result
.endfunction



