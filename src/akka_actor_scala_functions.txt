.function scala_get_type(typeName)
  if my.typeName = "tinyint" | my.typeName = "bool"
    return "Boolean"
  elsif my.typeName = "int" | my.typeName = "long" | my.typeName = "double" | my.typeName = "string" | my.typeName = "timestamp" | my.typeName = "any" | my.typeName = "actor_ref"
    return "$(my.typeName:Pascal)"
  elsif my.typeName = "bigint"
    return "Long"
  elsif my.typeName = "array"
    return "Seq"
  elsif my.typeName = "map"
    return "Map"
  else
    ref = find_entity_by_type(my.typeName)
    if defined(ref.enum) & ref.enum = "true"
      return "$(my.typeName:Pascal)"
    else
      return "$(my.typeName:Pascal)Vo"
    endif
  endif
.endfunction

.function scala_output_type(field)
  if my.field.type = "array"
    my.valueType = scala_get_type(my.field.valueType)
    return "Seq[$(my.valueType:Pascal)]"
  elsif my.field.type = "map"
    if defined(my.field.entity)
      my.ref = model->entity(name = my.field.entity)
      my.keyField = my.ref->field(name = my.field.keyField)
      my.valueField = my.ref->field(name = my.field.valueField)
      my.keyType = scala_get_type(my.keyField.type)
      my.valueType = scala_get_type(my.valueField.type)
      return "Map[$(my.keyType:no), $(my.valueType:no)]"
    else
      my.keyType = scala_get_type(my.field.keyType)
      my.valueType = scala_get_type(my.field.valueType)
      return "Map[$(my.keyType:no), $(my.valueType:no)]"
    endif
  endif
  if defined(my.field.required) & my.field.required = "true"
    return "$(scala_get_type(my.field.type):no)"
  else
    return "Option[$(scala_get_type(my.field.type):no)]"
  endif
.endfunction

.function scala_output_default(field)
  if my.field.type = "tinyint" | my.field.type = "bool"
    if defined(my.field.required) & my.field.required = "true"
      return "false"
    else
      return "None"
    endif
  elsif my.field.type = "int"
    if defined(my.field.required) & my.field.required = "true"
      return "0"
    else
      return "None"
    endif
  elsif my.field.type = "bigint"
    if defined(my.field.required) & my.field.required = "true"
      return "0"
    else
      return "None"
    endif
  elsif my.field.type = "double"
    if defined(my.field.required) & my.field.required = "true"
      return "0.0"
    else
      return "None"
    endif
  elsif my.field.type = "string"
    if defined(my.field.required) & my.field.required = "true"
      return "null"
    else
      return "None"
    endif
  elsif my.field.type = "timestamp"
    if defined(my.field.required) & my.field.required = "true"
      return "null"
    else
      return "None"
    endif
  elsif my.field.type = "any"
    if defined(my.field.required) & my.field.required = "true"
      return "null"
    else
      return "None"
    endif
  elsif my.field.type = "array"
    if defined(my.field.required) & my.field.required = "true"
      return "Seq()"
    else
      return "None"
    endif
  elsif my.field.type = "map"
    if defined(my.field.required) & my.field.required = "true"
      return "Map()"
    else
      return "None"
    endif
  elsif my.field.type = "actor_ref"
    if defined(my.field.required) & my.field.required = "true"
      return "null"
    else
      return "None"
    endif
  else
    ref = find_entity_by_type(my.field.type)
    if defined(ref.enum) & ref.enum = "true"
      if defined(my.field.required) & my.field.required = "true"
        return "null"
      else
        return "None"
      endif
    else
      if defined(my.field.required) & my.field.required = "true"
        return "null"
      else
        return "None"
      endif
    endif
  endif
.endfunction

.function scala_output_define_fields(entity)
  my.result = ""
  if defined(extract_pk(my.entity))
    my.pk = extract_pk(my.entity)
    for my.pk.field
      my.fieldName = field.name
      my.field = ""
      if defined(my.entity->field(name = my.fieldName))
        my.field = my.entity->field(name = my.fieldName)
      else
        my.field = extract_fk_field(my.entity, my.fieldName)
      endif
      if string.length(my.result) > 0
        my.result = my.result + "\n  "
      endif
      my.result = my.result + "var $(field.name:Camel): $(scala_output_type(field)) = $(scala_output_default(field)) "
    endfor
  endif
  for my.entity.field
    if !is_pk_field(my.entity, field.name)
      if string.length(my.result) > 0
        my.result = my.result + "\n  "
      endif
      my.result = my.result + "var $(field.name:Camel): $(scala_output_type(field)) = $(scala_output_default(field)) "
    endif
  endfor
  return my.result
.endfunction


.function scala_output_field_name_list(entity, include_transient)
  my.result = ""
  if defined(extract_pk(my.entity))
    my.pk = extract_pk(my.entity)
    for my.pk.field
      if string.length(my.result) > 0
        my.result = my.result + ", "
      endif
      my.result = my.result + "$(field.name:Camel)"
    endfor
  endif
  for my.entity.field
    if(my.include_transient)
      if string.length(my.result) > 0
        my.result = my.result + ", "
      endif
      my.result = my.result + "$(field.name:Camel)"
    else
      if !is_pk_field(my.entity, field.name) & (!defined(field.transient) | transient = "false")
        if string.length(my.result) > 0
          my.result = my.result + ", "
        endif
        my.result = my.result + "$(field.name:Camel)"
      endif
    endif
  endfor
  return my.result
.endfunction

.function scala_output_set_field_value(field)
  return "this.$(field.name:Camel) = $(field.name:Camel)"
.endfunction

.function scala_output_set_field_values(entity)
  my.result = ""
  for my.entity.field
    if !is_pk_field(my.entity, field.name)
      if string.length(my.result) > 0
        my.result = my.result + "\n      "
      endif
      my.result = my.result + "this.$(field.name:Camel) = $(field.name:Camel)"
    endif
  endfor
  return my.result
.endfunction

.function scala_output_key_name_list(entity)
  my.result = ""
  if defined(extract_pk(my.entity))
    my.pk = extract_pk(my.entity)
    for my.pk.field
      if string.length(my.result) > 0
        my.result = my.result + ", "
      endif
      my.result = my.result + "$(field.name:Camel)"
    endfor
  endif
  return my.result
.endfunction

.function scala_output_get_field_values(entity, include_transient)
  my.result = ""
  if defined(extract_pk(my.entity))
    my.pk = extract_pk(my.entity)
    for my.pk.field
      if string.length(my.result) > 0
        my.result = my.result + ", "
      endif
      my.result = my.result + "$(field.name:Camel)"
    endfor
  endif
  for my.entity.field
    if(my.include_transient)
      if string.length(my.result) > 0
        my.result = my.result + ", "
      endif
      my.result = my.result + "$(field.name:Camel)"
    else
      if !is_pk_field(my.entity, field.name) & (!defined(field.transient) | transient = "false")
        if string.length(my.result) > 0
          my.result = my.result + ", "
        endif
        my.result = my.result + "$(field.name:Camel)"
      endif
    endif
  endfor
  return my.result
.endfunction

.function scala_output_get_field_value(field)
  return "$(field.name)"
.endfunction

.function scala_output_field_name(field)
  return "$(field.name)"
.endfunction

.function scala_output_add_field_value(field)
  return ""
.endfunction

.function scala_output_remove_field_value(field)
  return ""
.endfunction
